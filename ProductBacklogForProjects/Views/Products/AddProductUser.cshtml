@model ProductBacklogForProjects.Models.ProductCreateViewModel
@using ProductBacklogForProjects.Extensions

@{
    ViewBag.Title = "AddProduct";
}

<div class="row">
    <div class="col-md-6">
        <h2>Add Product</h2>
        @using (Html.BeginForm("AddProduct", "Products", new { projectId = Model.ProjectId }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4></h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Subjects, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.SubjectId,
         Model.Subjects.ToSelectListItem(Model.SubjectId)
    , new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Goal, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Goal, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Goal, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Goal, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Benefit, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Benefit, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Benefit, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Priorities, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.PriorityId,
         Model.Priorities.ToSelectListItem(Model.PriorityId),
         new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PriorityId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Sprint, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Sprint, new { htmlAttributes = new { @Value = "1" } })
                        @Html.ValidationMessageFor(model => model.Sprint, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Statuses, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.StatusId,
                            Model.Statuses.ToSelectListItem(Model.StatusId),
                            new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create Product" class="btn btn-success" />
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="col-md-6">
        <h2>Create User</h2>
        @using (Html.BeginForm("AddUser", "Products",
            new { projectId = Model.ProjectId }))
        {
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4></h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.SubjectName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SubjectName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SubjectName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Add User" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            }
        }

        <h2>Remove User</h2>
        @using (Html.BeginForm("RemoveUser", "Products", new { projectId = Model.ProjectId }))
        {
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4></h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Subjects, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.SubjectId,
                                Model.Subjects.ToSelectListItem(Model.SubjectId)
                           , new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Goal, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Remove User" class="btn btn-danger" />
                        </div>
                    </div>
                </div>
            }
        }

    </div>
</div>

<a class="btn btn-sm btn-primary" href="/Products/ProductBacklog/@Model.ProjectId">
    <span class="fa fa-arrow-left"></span>
    Back to list
</a>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}